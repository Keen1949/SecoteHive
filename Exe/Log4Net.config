<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!--添加自定义节点：log4net  type：解析类名，程序集名(log4net.dll)-->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <log4net>
    <appender name="ColoredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
      <mapping>
        <level value="ERROR" />
        <foreColor value="White" />
        <backColor value="Red, HighIntensity" />
      </mapping>
      <mapping>
        <level value="DEBUG" />
        <backColor value="Green" />
      </mapping>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
    <!--定义输出到文件中-->
    <appender name="Log4Net_root" type="log4net.Appender.OutputDebugStringAppender">
      <!--定义文件存放位置-->
      <!--<file value="./log/"/>
      -->
      <!--<maximumFileSize value="10MB" />-->
      <!--

      -->
      <!--是否追加到文件,默认为true，通常无需设置-->
      <!--
      <appendToFile value="true"/>
      <RollingStyle value="Date"/>
      -->
      <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
      <!--
      <DatePattern value="yyyyMMdd&quot;.log&quot;" />
      -->
      <!--日志文件名是否为静态-->
      <!--
      <StaticLogFileName value="false"/>
      -->
      <!--多线程时采用最小锁定-->
      <!--
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />-->
      <!--布局（向用户显示最后经过格式化的输出信息）-->
      <layout type="log4net.Layout.PatternLayout">
        <!--
           %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
           %n(new line):换行 
           %d(datetime):输出当前语句运行的时刻 
           %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
           %t(thread id):当前语句所在的线程ID 
           %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
           %c(class):当前日志对象的名称，例如：
           %L：输出语句所在的行号 
           %F：输出语句所在的文件名 
           %-数字：表示该项的最小长度，如果不够，则用空格填充
          -->
        <!--<Header value="[Header]&#13;&#10;"/>
        <Footer value="[Footer]&#13;&#10;"/>-->
        <!--正文-->
        <ConversionPattern value="%date{yyyy:MM:dd,HH:mm:ss}:%r,%-5level,%message%newline" />
      </layout>
    </appender>
    <appender name="AutoFrame_Log" type="log4net.Appender.RollingFileAppender">
      <!--定义文件存放位置-->
      <file value="d:\exe\Log\log\" />
      <!--<maximumFileSize value="10MB" />-->
      <!--是否追加到文件,默认为true，通常无需设置-->
      <appendToFile value="true" />
      <RollingStyle value="Date" />
      <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
      <DatePattern value="&quot;log_&quot;yyyyMMdd&quot;.csv&quot;" />
      <!--日志文件名是否为静态-->
      <StaticLogFileName value="false" />
      <!--多线程时采用最小锁定-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--布局（向用户显示最后经过格式化的输出信息）-->
      <layout type="log4net.Layout.PatternLayout">
        <!--
           %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
           %n(new line):换行 
           %d(datetime):输出当前语句运行的时刻 
           %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
           %t(thread id):当前语句所在的线程ID 
           %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
           %c(class):当前日志对象的名称，例如：
           %L：输出语句所在的行号 
           %F：输出语句所在的文件名 
           %-数字：表示该项的最小长度，如果不够，则用空格填充
          -->
        <!--<Header value="[Header]&#13;&#10;"/>
        <Footer value="[Footer]&#13;&#10;"/>-->
        <!--正文-->
        <ConversionPattern value="%date{yyyy-MM-dd,HH:mm:ss}:%r,%-5level,%message%newline" />
      </layout>
    </appender>
    <appender name="ErrorLog" type="log4net.Appender.RollingFileAppender">
      <!--定义文件存放位置-->
      <file value="d:\exe\Log\ErrorLog\" />
      <!--<maximumFileSize value="10MB" />-->
      <!--是否追加到文件,默认为true，通常无需设置-->
      <appendToFile value="true" />
      <RollingStyle value="Date" />
      <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
      <DatePattern value="&quot;ErrorLog_&quot;yyyyMMdd&quot;.csv&quot;" />
      <!--日志文件名是否为静态-->
      <StaticLogFileName value="false" />
      <!--多线程时采用最小锁定-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--布局（向用户显示最后经过格式化的输出信息）-->
      <layout type="log4net.Layout.PatternLayout">
        <!--
           %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
           %n(new line):换行 
           %d(datetime):输出当前语句运行的时刻 
           %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
           %t(thread id):当前语句所在的线程ID 
           %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
           %c(class):当前日志对象的名称，例如：
           %L：输出语句所在的行号 
           %F：输出语句所在的文件名 
           %-数字：表示该项的最小长度，如果不够，则用空格填充
          -->
        <!--<Header value="[Header]&#13;&#10;"/>
        <Footer value="[Footer]&#13;&#10;"/>-->
        <!--正文-->
        <ConversionPattern value="%message%newline" />
      </layout>
    </appender>
    <root>
      <level value="DEBUG" />
      <!--<appender-ref ref="Log4Net_root" />-->
      <!--<appender-ref ref="OutputDebugStringAppender" />-->
      <appender-ref ref="AutoFrame_Log" />
    </root>
    <!--<logger name="debug">
      <level value="DEBUG" />
     <additivity value = "false" />
      <appender-ref ref="ColoredConsoleAppender" />
    </logger>-->
    <logger name="ErrorLog">
      <level value="DEBUG" />
      <additivity value="false" />
      <appender-ref ref="ErrorLog" />
    </logger>
    <!--<logger name="warning">
      <level value="DEBUG" />
      <additivity value = "false" />
      <appender-ref ref="warning" />
    </logger>
	
	<logger name="error">
      <level value="DEBUG" />
      <additivity value = "false" />
      <appender-ref ref="warning" />
    </logger>-->
  </log4net>
</configuration>